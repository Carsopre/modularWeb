# Generated by Django 2.2.3 on 2019-07-30 22:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('text_value', models.CharField(blank=True, max_length=250)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_mainapp.basefield_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ContentPageType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BasePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=25, unique=True)),
                ('title', models.CharField(max_length=50)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_mainapp.basepage_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='FlexiblePage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.BasePage')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('mainApp.basepage',),
        ),
        migrations.CreateModel(
            name='LandingPageField',
            fields=[
                ('basefield_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.BaseField')),
                ('field_type', models.CharField(choices=[('MF', 'Main field (h2)'), ('SF', 'Sub field (h3)')], default='MF', max_length=2)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('mainApp.basefield',),
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('basefield_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.BaseField')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('mainApp.basefield',),
        ),
        migrations.CreateModel(
            name='MediaItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_mainapp.mediaitem_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='MediaIcon',
            fields=[
                ('mediaitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.MediaItem')),
                ('faIcon', models.CharField(max_length=50)),
                ('faIconType', models.CharField(default='fab', max_length=50)),
                ('isVisible', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('mainApp.mediaitem',),
        ),
        migrations.CreateModel(
            name='MediaImage',
            fields=[
                ('mediaitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.MediaItem')),
                ('description', models.TextField(blank=True)),
                ('img', models.ImageField(upload_to='uploads/imgs/')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('mainApp.mediaitem',),
        ),
        migrations.CreateModel(
            name='ScaffoldPage',
            fields=[
                ('basepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.BasePage')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('mainApp.basepage',),
        ),
        migrations.CreateModel(
            name='BlogPage',
            fields=[
                ('flexiblepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.FlexiblePage')),
                ('blog_body', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('mainApp.flexiblepage',),
        ),
        migrations.CreateModel(
            name='IntroPage',
            fields=[
                ('flexiblepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.FlexiblePage')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('mainApp.flexiblepage',),
        ),
        migrations.CreateModel(
            name='PageLink',
            fields=[
                ('basefield_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.BaseField')),
                ('icon_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainApp.MediaItem')),
                ('internal_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainApp.FlexiblePage')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('mainApp.basefield',),
        ),
        migrations.CreateModel(
            name='LibraryEntry',
            fields=[
                ('pagelink_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.PageLink')),
                ('summary', models.TextField(blank=True)),
                ('status', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('mainApp.pagelink',),
        ),
        migrations.CreateModel(
            name='OutroPage',
            fields=[
                ('flexiblepage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainApp.FlexiblePage')),
                ('outro_text', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('mainApp.flexiblepage',),
        ),
        migrations.CreateModel(
            name='FlexiblePageField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_link', models.PositiveSmallIntegerField(default=0)),
                ('to_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='has_field', to='mainApp.BaseField', verbose_name='Has field')),
                ('in_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.FlexiblePage', verbose_name='From')),
            ],
        ),
        migrations.AddField(
            model_name='flexiblepage',
            name='background',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainApp.MediaImage'),
        ),
        migrations.AddField(
            model_name='flexiblepage',
            name='fields',
            field=models.ManyToManyField(blank=True, related_name='has_fields', through='mainApp.FlexiblePageField', to='mainApp.BaseField'),
        ),
        migrations.CreateModel(
            name='CompositePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_order', models.PositiveSmallIntegerField(default=0)),
                ('content_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='composite_content_page', to='mainApp.FlexiblePage')),
                ('scaffold_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='composite_scaffold_page', to='mainApp.ScaffoldPage')),
            ],
        ),
        migrations.CreateModel(
            name='LibraryEntryCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='has_collection', to='mainApp.Library')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='has_entry', to='mainApp.LibraryEntry')),
            ],
        ),
        migrations.AddField(
            model_name='library',
            name='entries',
            field=models.ManyToManyField(blank=True, related_name='has_entries', through='mainApp.LibraryEntryCollection', to='mainApp.LibraryEntry'),
        ),
    ]
